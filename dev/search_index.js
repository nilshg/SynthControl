var documenterSearchIndex = {"docs":
[{"location":"methods/ADH2010/#Abadie,-Diamond-and-Hainm√ºller-(2010)-Synthetic-Control-Model","page":"ADH2010","title":"Abadie, Diamond and Hainm√ºller (2010) Synthetic Control Model","text":"","category":"section"},{"location":"methods/ADH2010/","page":"ADH2010","title":"ADH2010","text":"The ADH2011 model is in some sense the canonical Synthetic Control Model. It is set out in Abadie, Diamond and Hainm√ºller (2010, JASSA)[1], which estimates the effects of proposition 99, a change to tobacco advertising rules in California, on smoking rates in the state. ","category":"page"},{"location":"methods/ADH2010/","page":"ADH2010","title":"ADH2010","text":"The method was initially introduced in Abadie and Gardeazabal (2003)[2].","category":"page"},{"location":"methods/ADH2010/","page":"ADH2010","title":"ADH2010","text":"[1]: Abadie, A., Diamond, A., and Hainm√ºller, J. (2010): Synthetic Control Methods for Comparative Case Studies: Estimating the Effect of California‚Äôs Tobacco Control Program, American Journal of Political Science, Vol. 59(2), Pp. 495-510","category":"page"},{"location":"methods/ADH2010/","page":"ADH2010","title":"ADH2010","text":"[2]: Abadie, A., and Gardeazabal, J. (2003): The Economic Cost of Conflict: A Case Study of the Basque Country, American Economic Review, Vol. 93(1), Pp. 113-132","category":"page"},{"location":"#SynthControl.jl","page":"Home","title":"SynthControl.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A Julia package for estimating causal effects via synthetic control estimators","category":"page"},{"location":"#Package-Overview","page":"Home","title":"Package Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"SynthControl aims to provide a wide coverage of synthetic control estimators, written in pure Julia. The package is under development, with new estimators and options for statistical inference added. Where possible, estimators are implemented following reference implementations by the original authors.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The following table provides an overview of the planned scope of the package as well as current implementation status ","category":"page"},{"location":"","page":"Home","title":"Home","text":"Estimator Point estimate Covariates Standard Errors Reference implementation\nSimple SCM üü¢ üü• üü• None\nADH2010 üü° üü• üü• None\nSyntheticDiD üü¢ üü• üü° synthdid (R)\nPenalizedSCM üü• üü• üü• pensynth (R)\nAugmentedSCM üü• üü• üü• augsynth (R)\nMC-NNM üü° üü• üü• fect (R)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Contributions to add methods to the package scope - or even better, full implementations! - are very much welcome.","category":"page"},{"location":"#Documentation-outline","page":"Home","title":"Documentation outline","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Introduction to Synthetic Control estimation\nPackage design\nAvailable estimators\nSimpleSCM\nADH2010\nSyntheticDiD\nPenalizedSCM\nAugmentedSCM\nMC-NNM\nExamples","category":"page"},{"location":"#API","page":"Home","title":"API","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"SimpleSCM\nSyntheticDiD\nfit!\nisfitted","category":"page"},{"location":"#SynthControl.SimpleSCM","page":"Home","title":"SynthControl.SimpleSCM","text":"SimpleSCM\n\nTakes in a TreatmentPanel and holds the results of calling the fit! method, optimal weights for comparator units and the resulting predicted outcome of the synthetic control unit as well as the estimated treatment effect from comparing synthetic control and observed outcome of the treated unit.\n\n\n\n\n\n","category":"type"},{"location":"#SynthControl.SyntheticDiD","page":"Home","title":"SynthControl.SyntheticDiD","text":"SyntheticDiD\n\nSynthetic Differences-in-Differences (SDID) estimator as described in Arkhangelsky et al. (2021). SDID is defined as \n\nŒºÃÇ, Œ±ÃÇ, Œ≤ÃÇ, œÑÃÇ = argmin ‚àë‚Çô‚àë‚Çú(Y·µ¢‚Çú - Œº - Œ±·µ¢ - Œ≤‚Çú - W·µ¢‚ÇúœÑ)¬≤œâÃÇ·µ¢ŒªÃÇ‚Çú\n\nwhere i = 1, 2, ..., N denotes the observation units in the panel, t = 1, ..., T denotes the time periods, Y is an (N√óT) matrix of outcomes, W is an (N√óT) indicator matrix of treatment status, œâ is a unit weight and Œª is a time period weight. \n\nThe implementation follows the author's reference implementation in the R package synthdid, published by the authors under a BSD-3 license at https://github.com/synth-inference/synthdid/\n\nNOTE: The implementation assumes that the outcomes and treatment matrices are sorted such that treated units come last in both Y and W. It therefore checks whether W is sorted and swaps rows in both Y and W to sort both matrices accordingly if required. \n\n\n\n\n\n","category":"type"},{"location":"#SynthControl.fit!","page":"Home","title":"SynthControl.fit!","text":"fit!(s::SimpleSCM; placebo_test = false)\n\nFit the SimpleSCM s by finding the weights that minimize the distance between the pre-treatment outcomes for the observational unit of interest and the weighted average pre-treatment outcomes for unweighted units.\n\nIf placebo_test = true is supplied, additional placebo tests will be performed by using every non-treated unit in the data set as the treated unit in turn and estimating the treatment impact on this unit. Results are stored in the p_test_res field and can be used as the basis for inference.\n\n\n\n\n\n","category":"function"},{"location":"#SynthControl.isfitted","page":"Home","title":"SynthControl.isfitted","text":"isfitted(s::SimpleSCM)\n\nCheck whether the SimpleSCM object s has been fitted.\n\nExamples\n\njulia> df = load_brexit();\n\njulia> s = SimpleSCM(df, :country, :dateid, :realgdp, 86, \"United Kingdom\");\n\njulia> isfitted(s)\nfalse\n\njulia> fit!(s);\n\njulia> isfitted(s)\ntrue\n\n\n\n\n\n\n","category":"function"},{"location":"methods/SimpleSCM/#Simple-Synthetic-Control-Model","page":"SimpleSCM","title":"Simple Synthetic Control Model","text":"","category":"section"},{"location":"methods/SimpleSCM/","page":"SimpleSCM","title":"SimpleSCM","text":"This method captures the simple-most version of a Synthetic Control Model. It only relies on outcome data Y_it and treatment indicators W_it to find unit-weights omega_i by solving","category":"page"},{"location":"methods/SimpleSCM/","page":"SimpleSCM","title":"SimpleSCM","text":"$","category":"page"},{"location":"methods/SimpleSCM/","page":"SimpleSCM","title":"SimpleSCM","text":"\\omega^* = \\arg \\min{\\omega} || Y{tr, 1:T0} - \\omega Y{co, 1:T0} ||2 \\\ns.t. \\sum{i = 1}^{N{co}} \\omegai = 1 \\\n0 \\leq \\omegai \\leq 1 \\ \\forall \\ i \\in 1, ..., N_{co} $","category":"page"},{"location":"methods/SimpleSCM/","page":"SimpleSCM","title":"SimpleSCM","text":"where Y_tr cdot is a length T_0 vector of pre-treatment outcomes for the treated unit, Y_co 1T_0 is a (N_co times T_0) matrix of pre-treatment outcomes for the N_co control units and omega is a length N_co vector of weights for each control unit. Weights are restricted to lie between zero and one for each control unit and to sum up to one, as in Abadie and Gardeazabal (2003). ","category":"page"},{"location":"methods/SimpleSCM/","page":"SimpleSCM","title":"SimpleSCM","text":"The SimpleSCM method can therefore be seen as a simplified version of the Abadie and Gardeazabal (2003) or Abadie, Diamond and Hainm√ºller (2011) Synthetic Control Model, with the following differences:","category":"page"},{"location":"methods/SimpleSCM/","page":"SimpleSCM","title":"SimpleSCM","text":"Only past outcomes are being used to find weights, no other covariate information is taken into account;\nThere is no weighting of covariates (i.e., past outcomes) - in the original Abadie/Gardeazabal notation, the diagonal matrix V which weigts covariates is the identity matrix. ","category":"page"}]
}
